-# Parte IV - Un pasiño mais...

# Anexo: ¡Queda moito mais por aprender!

{:: encoding="utf-8" /}
{footnotes-off}

## Recursos

Ao longo do libro incluimos gran cantidade de links para facilitarche recursos para aprender mais acerca dos conceptos chaves.

Recopilamos todolos enlaces de maneira automática nesta lista de enlaces pra vos nun só lugar, *[extras/recursos.md](https://github.com/UlisesGascon/javascript-inspirate/tree/master/extras/recursos.md)* en *[nuestro repositorio](https://github.com/UlisesGascon/javascript-inspirate)*.

## Libros interesantes

{icon=book}
G> #### Deberías ler...
G>
G> - *[JavaScript for PHP Developers: A Concise Guide to Mastering JavaScript by Stoyan Stefanov](https://www.amazon.es/JavaScript-PHP-Developers-Concise-Mastering-ebook/dp/B00CICVLQU/)*
G> - *[You Don't Know JS (book series) by Kyle Simpson](https://github.com/getify/You-Dont-Know-JS)*
G> - *[JavaScript Allongé, the "Six" Edition by Reg “raganwald” Braithwaite](https://leanpub.com/javascriptallongesix)*
G> - *[Effective JavaScript: 68 Specific Ways to Harness the Power of JavaScript by David Herman](https://www.amazon.com/Effective-JavaScript-Specific-Software-Development/dp/0321812182/)*
G> - *[JavaScript for Kids: A Playful Introduction to Programming by Nick Morgan](https://www.amazon.com/JavaScript-Kids-Playful-Introduction-Programming/dp/1593274084/)*
G> - *[Eloquent JavaScript de Marijn Haverbeke](https://www.amazon.es/Eloquent-JavaScript-Modern-Introduction-Programming-ebook/dp/B00QL616UU/)*
G> - *[JavaScript: The Good Parts de Douglas Crockford](https://www.amazon.es/JavaScript-Good-Parts-ebook/dp/B0026OR2ZY)*
G> - *[JavaScript Patterns by Stoyan Stefanov](https://www.amazon.es/JavaScript-Patterns-Stoyan-Stefanov/dp/0596806752)*
G> - *[JavaScript Ninja de John Resig y Bear Bibeault](https://www.amazon.es/JavaScript-Ninja-Anaya-Multimedia-Manning/dp/8441533970)*
G> - *[JavaScript. La Guía Definitiva de David Flanagan](https://www.amazon.es/JavaScript-Definitiva-Anaya-Multimedia-%C2%BFReilly/dp/8441522022)*
G> - *[Código Limpio de Robert C. Martin](http://www.casadellibro.com/libro-codigo-limpio/9788441532106/2007424)*
G> - *[Sams Teach Yourself Node.js in 24 Hours by George Ornbo](https://www.amazon.es/dp/B0096C9C0M/ref=dp-kindle-redirect?_encoding=UTF8&btkr=1)*
G> - *[Learning JavaScript Design Pattern by Addy Osmani](http://addyosmani.com/resources/essentialjsdesignpatterns/book/)*

## Ampliar horizontes

Esperamos que este libro resultaravos de utilidade e que os axudara a comezar a recorrer o longo camiño do desenvolvente web.

Propoñemosvos algunhas ideas pra que podades seguir crecendo e evolucionando, a pesar de que a nosa historia acaba aquí.

Esta claro que a mellor maneira de aprender unha linguaxe de programación e practicando, practicando e seguir practicando...

Estas son algunhas formas sinxelas pero efectivas de logralo:

### Aprender a utilizar Git e GitHub

Se queredes formar parte da comunidade ou entrar a traballar nun entorno áxil, un dos primeiros pasos e aprender a manexarvos co control de versións.

### Aprender unha nova linguaxe

Pode parecer unha loucura comezar con outra linguaxe, pero cada linguaxe ten algo único e un enfoque especial. Aprender mais linguaxes axudarávos a pensar moito mais alá da linguaxe que uses. O que a la larga fará que sexades uns mellores artesans.

### Dominar un framework

E unha decisión compricada... un framework é un recurso, que pode ser difícil de aprender e en ocasións ten unha vida útil moi curta. Gran parte do traballo será elexir o framework que máis vos conveña. E moi importante, ter en conta, que se é o primeiro framework... enseñarávos unha nova forma de ver as cousas e de traballar en JavaScript. Non o desaproveitedes, merece a pena botar un poco máis de tempo en aprender novas formas de facer as cousas.

### Familiarízarse coas librerías máis populares

JQuery pode ser un gran comenzo. Podedes adaptar librerías a JQuery ou ao revés, esí rápidamente gañarédes soltura. Existen moitas outras librerías que deberíades coñecer e que faranche a vida mais fácil.

### Contribue a mellorar as cousas

Podes unirte a grupos de trabajo e organizacions en Github e ir colaborando nalguns dos moitos proxectos que existen sobre JavaScript.

### Documentar non é unha mala idea

Durante a lectura deste libro, espero que poderades consultala *[documentación de MDN](https://developer.mozilla.org/es/)* pra poder aprender máis sobre o que vos contamos.... Recordade que esa documentación creaná moitos voluntarios, en todo o mundo, que entre outras cousas, a melloran, amplían e traducen a diversos idiomas. Non o dudedes... **unidevos!**

### Axuda ao veciño

Seguro que mirache -máis dunha vez- como se fai algo en *[Stackoverflow](http://stackoverflow.com/)*, *[Codepen](http://codepen.io/)*, foros especializados, comunidades, etc... Podedes tamén contribuir e axudar aos demáis, solucionando dubidas. Ao principio faise moi costa arriba, pero logo é extraordinariamente atractivo. E se non que lle pregunten a *[Coma](http://stackoverflow.com/users/94144/coma)*.

### Guías de estilo

Adoptar unha *[guía de estilos](http://es.stackoverflow.com/questions/22406/gu%C3%ADa-de-estilo-para-html-css-y-javascript)* axudará non só a consolidar unha forma correcta e uniforme de desenvolver código en JavaScript se non que tambén axudaravós a xestionarvos coa *[La Ley de Parkinson de la Trivialidad](https://es.wikipedia.org/wiki/Ley_de_Parkinson_de_la_trivialidad)*.

Recomendamos usar *[Idiomatic.js](https://github.com/rwaldron/idiomatic.js/tree/master/translations/es_ES)* aínda que existen moitas máis como *[JavaScript Style Guide de Airbnb](https://github.com/airbnb/javascript)* e *[muchas más](http://noeticforce.com/best-javascript-style-guide-for-maintainable-code)*.
